@use 'mixins' as *;
@use 'animations' as *;
@import url('https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Josefin+Sans:wght@300;400;500;600&display=swap');

html{
    box-sizing: border-box;
}

*{
    padding: 0;
    margin: 0; 
}

*,
*::before,
*::after {
	box-sizing: inherit;
}

html, body{
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;

    font: {
        size: 18px !important; 
        family: 'Josefin Sans', sans-serif !important;
    }

    color: black;
}

body{
    font-size: 18px;
    
    background: {
        image: url("background.png");
        repeat: repeat;
        position: center center;
    }
}

header{ 
    position: sticky;
    width: 100%;
    padding-top: 1vh;

    h1{
        font: {
            size: 3rem;
            family: 'Luckiest Guy', cursive;
            weight: 300;
        }

        text: {
            align: center;
            decoration: none;
        }

        color:black;
    }
}

.inline, %strong-alert{
    display: flex;
    flex-direction: row;
    justify-content: space-evenly;
}

#memory-game {
    position: relative;
    display: flex;
	flex-direction: column;
    background: linear-gradient(to left top, rgb(120, 120, 255), rgb(65, 51, 190));
    max-width: 540px;
    margin: auto;
    @include border-radius(15px);
    @include gradient-border(6px, linear-gradient(312deg, rgba(255,0,194,1) 0%, rgba(214,0,255,1) 50%, rgba(255,0,164,1) 100%));

   // Isn't working! Issue: Position -> Absolute
    &:before{
        @include animation(BorderAnimation 5s ease infinite);
    }

    .config{ 
        margin-top: 2vh;
        @extend .inline;

        button{
            background-color: #fff;
            outline: none;
            border: 0;
            overflow: hidden;
            cursor: pointer;

            padding: {
                left: 14px;
                right: 14px;
                top: 10px;
                bottom: 6px;
            }
            @include border-radius(6px);

            p{ 
                font: {
                    size: 18px;
                    family: 'Josefin Sans', sans-serif;
                }
            }

            &:active{

            }
        }
    }

    .deck{
        overflow: hidden;
        display: grid;
        justify-items: center;
        align-items: center;
        justify-content: center;
        grid-template-columns: repeat(4, 7rem);
        gap: 1.4rem 0px;
        perspective: 800px;
        padding: {
            top: 15px;
            left: 15px;
            right: 15px;
            bottom: 0px;
        }

        .card{
            height: 5rem;
            width: 5rem;
            margin: 0.2rem 0.2rem;
            background: white;
            cursor: pointer;
            justify-self: center;
            display: flex;
            justify-content: center;
            align-items: center;
            box-shadow: 2px 2px 10px 0 rgba(46, 61, 73, 0.5);
            transform: scale(1) rotateY(180deg);
            transform-style: preserve-3d;
            font-size: 0px;

            @include transition(transform .5s ease-in-out, font-size .2s);
            @include border-radius(5px);    

            &.open{
                font-size: 20px;
                transform: scale(.95) rotateY(0deg);
                background-color: cyan;
                color:rgb(255, 3, 171);
                @include transition(transform .3s ease-in-out, font-size .2s);
            }
    
            &.different{
                background-color: #ff5050;
                color: white;
                @include animation(CardUnmatched .4s cubic-bezier(.07,.77,.55,.8))
            }
    
            &.equal{
                background-color: #99ff99;
                color: white;
                @include animation(CardMatched .4s);
            }

            &.disabled{
                pointer-events: none;
            }
        }
    }

    .stats{
        @extend .inline;

        p[data-count]::after{
            content: attr(data-count);
        }
    }  
}




